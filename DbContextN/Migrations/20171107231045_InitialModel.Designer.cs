// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DbContextN.Migrations
{
    [DbContext(typeof(DataBase))]
    [Migration("20171107231045_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QualcoOne.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("BillDescription")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("BillMunicipalityId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CitizenId");

                    b.Property<DateTime>("DueDate");

                    b.Property<int?>("PaymentId");

                    b.Property<int?>("SettlementId");

                    b.HasKey("BillId");

                    b.HasIndex("CitizenId");

                    b.HasIndex("PaymentId")
                        .IsUnique()
                        .HasFilter("[PaymentId] IS NOT NULL");

                    b.HasIndex("SettlementId");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("QualcoOne.Models.Citizen", b =>
                {
                    b.Property<string>("CitizenId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<bool>("ChangePassword");

                    b.Property<string>("CompleteAddress")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("County")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("SendEmail");

                    b.HasKey("CitizenId");

                    b.ToTable("Citizen");
                });

            modelBuilder.Entity("QualcoOne.Models.DbVersion", b =>
                {
                    b.Property<int>("DbVersionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DbVersionNum")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("DbVersionId");

                    b.ToTable("DbVersion");
                });

            modelBuilder.Entity("QualcoOne.Models.Installation", b =>
                {
                    b.Property<int>("InstallationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("InstallationName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("InstallationValue")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("InstallationId");

                    b.ToTable("Installation");
                });

            modelBuilder.Entity("QualcoOne.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("PaymentDateTime");

                    b.Property<decimal>("Paymentamount");

                    b.HasKey("PaymentId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("QualcoOne.Models.Settlement", b =>
                {
                    b.Property<int>("SettlementId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Downpayment");

                    b.Property<int>("Installments");

                    b.Property<decimal>("MonthlyAmount");

                    b.Property<DateTime>("SettlementDateTime");

                    b.Property<int>("SettlementTypeId");

                    b.HasKey("SettlementId");

                    b.HasIndex("SettlementTypeId");

                    b.ToTable("Settlement");
                });

            modelBuilder.Entity("QualcoOne.Models.SettlementType", b =>
                {
                    b.Property<int>("SettlementTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("DownpaymentPercentage");

                    b.Property<decimal>("Interest")
                        .HasColumnType("decimal(5,4)");

                    b.Property<int>("NumOfInstallments");

                    b.HasKey("SettlementTypeId");

                    b.ToTable("SettlementType");
                });

            modelBuilder.Entity("QualcoOne.Models.TempImportedFile", b =>
                {
                    b.Property<string>("BillMunicipalityId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<decimal>("Amount");

                    b.Property<string>("BillDescription")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CompleteAddress")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("County")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("DueDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Vat")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("BillMunicipalityId");

                    b.ToTable("TempImportedFile");
                });

            modelBuilder.Entity("QualcoOne.Models.Bill", b =>
                {
                    b.HasOne("QualcoOne.Models.Citizen", "Citizen")
                        .WithMany("Bills")
                        .HasForeignKey("CitizenId");

                    b.HasOne("QualcoOne.Models.Payment", "Payment")
                        .WithOne("Bill")
                        .HasForeignKey("QualcoOne.Models.Bill", "PaymentId");

                    b.HasOne("QualcoOne.Models.Settlement", "Settlement")
                        .WithMany("Bills")
                        .HasForeignKey("SettlementId");
                });

            modelBuilder.Entity("QualcoOne.Models.Settlement", b =>
                {
                    b.HasOne("QualcoOne.Models.SettlementType", "SettlementType")
                        .WithMany("Settlements")
                        .HasForeignKey("SettlementTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
